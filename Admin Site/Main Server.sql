CLEAR SCREEN;
SET SERVEROUTPUT ON;
SET VERIFY OFF;

CREATE OR REPLACE PACKAGE QUIZ_COMPETITION_SYSTEM AS

	PROCEDURE QUES_ID_SEARCH(FOUND_ OUT NUMBER, QUESTION_ID OUT NUMBER, GIVEN_ANS OUT NUMBER);
	
	FUNCTION ANSWER_SEARCH(QUESTION_ID IN NUMBER)
	RETURN NUMBER;
	
	FUNCTION QUESTION_FOUND(QUESTION_ID IN NUMBER)
	RETURN VARCHAR2;
	
	PROCEDURE SCORE_RETURN(QUESTION_ID IN NUMBER, TOTAL_SCORE OUT NUMBER, ACHIEVED OUT NUMBER);
	
	PROCEDURE OPTION_SEARCH(QUESTION_ID IN NUMBER, OPTION1 OUT VARCHAR2, OPTION2 OUT VARCHAR2, OPTION3 OUT VARCHAR2, OPTION4 OUT VARCHAR2);
	
	PROCEDURE HOST_IDENTITY(HOSTNAME OUT VARCHAR2, GENDER OUT VARCHAR2);
	
END QUIZ_COMPETITION_SYSTEM;	
/

CREATE OR REPLACE PACKAGE BODY QUIZ_COMPETITION_SYSTEM AS
	
	PROCEDURE QUES_ID_SEARCH(FOUND_ OUT NUMBER, QUESTION_ID OUT NUMBER, GIVEN_ANS OUT NUMBER)
	IS
	BEGIN
		FOR X IN (SELECT * FROM Answer2) LOOP
			FOUND_ := 1;
			QUESTION_ID := X.QID;
			GIVEN_ANS := X.GIVEN_ANSWER;
			DELETE FROM Answer2;
		END LOOP;
	END QUES_ID_SEARCH;
	
	FUNCTION ANSWER_SEARCH(QUESTION_ID IN NUMBER)
	RETURN NUMBER
	IS
	BEGIN
		FOR S IN (SELECT * FROM Answer_List WHERE QID = QUESTION_ID) LOOP
			RETURN S.ANSWER;
		END LOOP;
		RETURN 0;
	END ANSWER_SEARCH;
	
	FUNCTION QUESTION_FOUND(QUESTION_ID IN NUMBER)
	RETURN VARCHAR2
	IS
	BEGIN
		FOR Z IN (SELECT * FROM Question_Gallery1 WHERE QID = QUESTION_ID) LOOP
			RETURN Z.QUESTION;		
		END LOOP;
		RETURN 0;
	END QUESTION_FOUND;
	
	PROCEDURE SCORE_RETURN(QUESTION_ID IN NUMBER, TOTAL_SCORE OUT NUMBER, ACHIEVED OUT NUMBER)
	IS
	BEGIN
		FOR P IN (SELECT * FROM Score@site_link WHERE QID = QUESTION_ID) LOOP
			TOTAL_SCORE := P.TOTAL_SCORE;
			ACHIEVED := P.GAIN;
		END LOOP;
	END SCORE_RETURN;
	
	PROCEDURE OPTION_SEARCH(QUESTION_ID IN NUMBER, OPTION1 OUT VARCHAR2, OPTION2 OUT VARCHAR2, OPTION3 OUT VARCHAR2, OPTION4 OUT VARCHAR2)
	IS
	BEGIN
		FOR K IN (SELECT * FROM Option_List WHERE OID = (SELECT OID FROM Question_Gallery1 WHERE QID = QUESTION_ID)) LOOP
			OPTION1 := K.OP1;
			OPTION2 := K.OP2;
			OPTION3 := K.OP3;
			OPTION4 := K.OP4;
		END LOOP;	
	END OPTION_SEARCH;
	
	PROCEDURE HOST_IDENTITY(HOSTNAME OUT VARCHAR2, GENDER OUT VARCHAR2)
	IS
	BEGIN
		FOR O IN (SELECT * FROM Host_info) LOOP
			HOSTNAME := O.NAME;
			GENDER := O.GENDER;
		END LOOP;
	END HOST_IDENTITY;
	
END QUIZ_COMPETITION_SYSTEM;	
/

DECLARE
	FOUND_ NUMBER;
	QUESTION_ID NUMBER;
	QUESTION VARCHAR2(100);
	GIVEN_ANS NUMBER;
	CORRECT_ANS NUMBER;
	EVALUTION VARCHAR2(15);
	ACHIEVED INTEGER;
	TOTAL_SCORE INTEGER;
	HOSTNAME VARCHAR2(25);
	GENDER VARCHAR2(10);
	OPTION1 VARCHAR(25);
	OPTION2 VARCHAR(25);
	OPTION3 VARCHAR(25);
	OPTION4 VARCHAR(25);
BEGIN
	FOUND_ := 0;
	QUESTION_ID := 0;
	GIVEN_ANS := 0;
	CORRECT_ANS := 0;
	ACHIEVED := 0;
	TOTAL_SCORE := 0;
	
	QUIZ_COMPETITION_SYSTEM.QUES_ID_SEARCH(FOUND_, QUESTION_ID, GIVEN_ANS);
	CORRECT_ANS := QUIZ_COMPETITION_SYSTEM.ANSWER_SEARCH(QUESTION_ID);
	QUESTION := QUIZ_COMPETITION_SYSTEM.QUESTION_FOUND(QUESTION_ID);
	QUIZ_COMPETITION_SYSTEM.SCORE_RETURN(QUESTION_ID, TOTAL_SCORE, ACHIEVED);
	
	IF (GIVEN_ANS = CORRECT_ANS) THEN
		EVALUTION := 'CORRECT';
	ELSE
		EVALUTION := 'WRONG';
	END IF;
	
	QUIZ_COMPETITION_SYSTEM.OPTION_SEARCH(QUESTION_ID, OPTION1, OPTION2, OPTION3, OPTION4);
	
	IF (FOUND_ = 1) THEN
		DBMS_OUTPUT.PUT_LINE('LAST QUESTION : ' || QUESTION);
		IF (CORRECT_ANS = 1) THEN DBMS_OUTPUT.PUT_LINE('CORRECT ANSWER : 1. ' || OPTION1);
		ELSIF (CORRECT_ANS = 2) THEN DBMS_OUTPUT.PUT_LINE('CORRECT ANSWER : 2. ' || OPTION2);
		ELSIF (CORRECT_ANS = 3) THEN DBMS_OUTPUT.PUT_LINE('CORRECT ANSWER : 3. ' || OPTION3);
		ELSIF (CORRECT_ANS = 4) THEN DBMS_OUTPUT.PUT_LINE('CORRECT ANSWER : 4. ' || OPTION4); END IF;
		IF (GIVEN_ANS = 1) THEN DBMS_OUTPUT.PUT_LINE('GIVEN ANSWER : 1. ' || OPTION1);
		ELSIF (GIVEN_ANS = 2) THEN DBMS_OUTPUT.PUT_LINE('GIVEN ANSWER : 2. ' || OPTION2);
		ELSIF (GIVEN_ANS = 3) THEN DBMS_OUTPUT.PUT_LINE('GIVEN ANSWER : 3. ' || OPTION3);
		ELSIF (GIVEN_ANS = 4) THEN DBMS_OUTPUT.PUT_LINE('GIVEN ANSWER : 4. ' || OPTION4); END IF;
		DBMS_OUTPUT.PUT_LINE('EVALUTION : ' || EVALUTION);
		DBMS_OUTPUT.PUT_LINE('ACHIEVED : ' || ACHIEVED);
		DBMS_OUTPUT.PUT_LINE('TOTAL SCORE : ' || TOTAL_SCORE);		
	ELSE
		QUIZ_COMPETITION_SYSTEM.HOST_IDENTITY(HOSTNAME, GENDER);
		IF (GENDER = 'MALE') THEN
			DBMS_OUTPUT.PUT_LINE('MR. ' || HOSTNAME || ', WELCOME TO QUIZ COMPETITION SYSTEM');
		ELSIF (GENDER = 'FEMALE') THEN
			DBMS_OUTPUT.PUT_LINE('MRS. ' || HOSTNAME || ', WELCOME TO QUIZ COMPETITION SYSTEM');
		END IF;
		DBMS_OUTPUT.PUT_LINE('DEVELOPED BY : ');
		DBMS_OUTPUT.PUT_LINE('MD. YOUNUS HOSSAIN AHSAN : 190104131');
		DBMS_OUTPUT.PUT_LINE('MD. ABID RAHMAN : 190104141');
		
	END IF;
END;
/

CREATE OR REPLACE PACKAGE QUIZ_COMPETITION_SYSTEM AS
	
	PROCEDURE QUES_COUNT(RID_ IN NUMBER, NUMBER_OF_QUES OUT NUMBER);
	
	PROCEDURE SCORE_CALCULATION(RID_ IN NUMBER, TOTAL_MARKS OUT NUMBER);
	
	PROCEDURE ROUND_FOUND;
	
END QUIZ_COMPETITION_SYSTEM;	
/

CREATE OR REPLACE PACKAGE BODY QUIZ_COMPETITION_SYSTEM AS

	PROCEDURE QUES_COUNT(RID_ IN NUMBER, NUMBER_OF_QUES OUT NUMBER)
	IS
	BEGIN
		FOR M IN (SELECT * FROM (SELECT COUNT(QID) AS NUM_OF_QUES, RID FROM Question_Gallery2@site_link GROUP BY RID) WHERE RID = RID_) LOOP
			NUMBER_OF_QUES := M.NUM_OF_QUES;
		END LOOP;
	END QUES_COUNT;
	
	PROCEDURE SCORE_CALCULATION(RID_ IN NUMBER, TOTAL_MARKS OUT NUMBER)
	IS
	BEGIN
		FOR N IN (SELECT * FROM (SELECT SUM(MARKS) AS TOTAL_MARKS, RID FROM Question_Gallery2@site_link GROUP BY RID) WHERE RID = RID_) LOOP
			TOTAL_MARKS := N.TOTAL_MARKS;
		END LOOP;
	END SCORE_CALCULATION;

	PROCEDURE ROUND_FOUND
	IS
	NUMBER_OF_QUES NUMBER;
	TOTAL_MARKS NUMBER;
	BEGIN
		FOR K IN (SELECT * FROM Round_info) LOOP
		
			QUES_COUNT(K.RID, NUMBER_OF_QUES);
			SCORE_CALCULATION(K.RID, TOTAL_MARKS);
			
			IF (NUMBER_OF_QUES > 0) THEN
				DBMS_OUTPUT.PUT_LINE(K.RID || CHR(9) || K.ROUND_NAME || CHR(9) || CHR(9) || NUMBER_OF_QUES || CHR(9) || TOTAL_MARKS);
			END IF;
			
		END LOOP;
	END ROUND_FOUND;
	
		
END QUIZ_COMPETITION_SYSTEM;	
/

BEGIN
	DBMS_OUTPUT.PUT_LINE('RID' || CHR(9) || 'NAME' || CHR(9) || 'NUMBER OF QUES' || CHR(9) || 'TOTAL MARKS');
	QUIZ_COMPETITION_SYSTEM.ROUND_FOUND;
END;
/

CREATE OR REPLACE PACKAGE QUIZ_COMPETITION_SYSTEM AS

	PROCEDURE ROUND_SELECTED(ROUND_ID OUT NUMBER);
	
	PROCEDURE QUESTION_VIEW(ROUND_ID IN NUMBER);
	
END QUIZ_COMPETITION_SYSTEM;	
/

CREATE OR REPLACE PACKAGE BODY QUIZ_COMPETITION_SYSTEM AS

	PROCEDURE ROUND_SELECTED(ROUND_ID OUT NUMBER)
	IS
	BEGIN
		FOR R IN (SELECT * FROM Round_info NATURAl JOIN (SELECT COUNT(QID) AS NUM_OF_QUES, RID FROM Question_Gallery2@site_link GROUP BY RID ORDER BY NUM_OF_QUES ASC)) LOOP
			ROUND_ID := R.RID;
			FOR S IN (SELECT * FROM Round_info WHERE RID = ROUND_ID) LOOP
				DBMS_OUTPUT.PUT_LINE('ROUND NAME : ' || S.ROUND_NAME);
			END LOOP;
			EXIT;
		END LOOP;
	END ROUND_SELECTED;
	
	PROCEDURE QUESTION_VIEW(ROUND_ID IN NUMBER)
	IS
	BEGIN
		DBMS_OUTPUT.PUT_LINE('-');
		DBMS_OUTPUT.PUT_LINE('QID' || CHR(9) || 'QUESTION' || CHR(9) || CHR(9) || CHR(9) || CHR(9) || CHR(9) || 'MARKS');
		FOR Q IN (SELECT * FROM Question_Gallery2@site_link WHERE RID = ROUND_ID) LOOP
			DBMS_OUTPUT.PUT_LINE(Q.QID || CHR(9) || Q.QUESTION || CHR(9) || CHR(9) || CHR(9) || CHR(9) || Q.MARKS);
		END LOOP;
	END QUESTION_VIEW;
	
END QUIZ_COMPETITION_SYSTEM;	
/

DECLARE
	ROUND_ID NUMBER;
BEGIN

	ROUND_ID := 0;
	QUIZ_COMPETITION_SYSTEM.ROUND_SELECTED(ROUND_ID);
	QUIZ_COMPETITION_SYSTEM.QUESTION_VIEW(ROUND_ID);
	
END;
/

ACCEPT B NUMBER PROMPT "QUESTION ID : ";

CREATE OR REPLACE PACKAGE QUIZ_COMPETITION_SYSTEM AS

	PROCEDURE ROUND_SELECTED(ROUND_ID OUT NUMBER);
	
	PROCEDURE QUESTION_SEARCH(QUESTION_ID IN NUMBER, QUESTION OUT VARCHAR2, MARKS OUT NUMBER);
	
	PROCEDURE OPTION_SEARCH(QUESTION_ID IN NUMBER, OPTION1 OUT VARCHAR2, OPTION2 OUT VARCHAR2, OPTION3 OUT VARCHAR2, OPTION4 OUT VARCHAR2);
	
	FUNCTION ANSWER_SEARCH(QUESTION_ID IN NUMBER)
	RETURN NUMBER;
	
END QUIZ_COMPETITION_SYSTEM;	
/

CREATE OR REPLACE PACKAGE BODY QUIZ_COMPETITION_SYSTEM AS

	PROCEDURE ROUND_SELECTED(ROUND_ID OUT NUMBER)
	IS
	BEGIN
		FOR R IN (SELECT * FROM Round_info NATURAl JOIN (SELECT COUNT(QID) AS NUM_OF_QUES, RID FROM Question_Gallery2@site_link GROUP BY RID)) LOOP
			ROUND_ID := R.RID;
			EXIT;
		END LOOP;
	END ROUND_SELECTED;
	
	PROCEDURE QUESTION_SEARCH(QUESTION_ID IN NUMBER, QUESTION OUT VARCHAR2, MARKS OUT NUMBER)
	IS
	BEGIN
		FOR Q IN (SELECT * FROM Question_Gallery2@site_link WHERE QID = QUESTION_ID) LOOP
			QUESTION := Q.QUESTION;
			MARKS := Q.MARKS;
			DBMS_OUTPUT.PUT_LINE('QUESTION : ' || Q.QUESTION || CHR(9) || CHR(9) || 'MARKS : ' || Q.MARKS);
		END LOOP;
	END QUESTION_SEARCH;
	
	PROCEDURE OPTION_SEARCH(QUESTION_ID IN NUMBER, OPTION1 OUT VARCHAR2, OPTION2 OUT VARCHAR2, OPTION3 OUT VARCHAR2, OPTION4 OUT VARCHAR2)
	IS
	BEGIN
		FOR K IN (SELECT * FROM Option_List WHERE OID = (SELECT OID FROM Question_Gallery1 WHERE QID = QUESTION_ID)) LOOP
			OPTION1 := K.OP1;
			OPTION2 := K.OP2;
			OPTION3 := K.OP3;
			OPTION4 := K.OP4;
		END LOOP;	
	END OPTION_SEARCH;
	
	FUNCTION ANSWER_SEARCH(QUESTION_ID IN NUMBER)
	RETURN NUMBER
	IS
	BEGIN
		FOR S IN (SELECT * FROM Answer_List WHERE QID = QUESTION_ID) LOOP
			RETURN S.ANSWER;
		END LOOP;
		RETURN 0;
	END ANSWER_SEARCH;
	
	
	
END QUIZ_COMPETITION_SYSTEM;	
/

DECLARE
	OPTION1 VARCHAR(25);
	OPTION2 VARCHAR(25);
	OPTION3 VARCHAR(25);
	OPTION4 VARCHAR(25);
	QUESTION_ID NUMBER;
	ANS NUMBER;
	MARKS NUMBER;
	QUESTION VARCHAR(100);
	ROUND_ID NUMBER;
BEGIN
		
	QUIZ_COMPETITION_SYSTEM.ROUND_SELECTED(ROUND_ID);
	QUESTION_ID := &B;
	QUIZ_COMPETITION_SYSTEM.QUESTION_SEARCH(QUESTION_ID, QUESTION, MARKS);
	QUIZ_COMPETITION_SYSTEM.OPTION_SEARCH(QUESTION_ID, OPTION1, OPTION2, OPTION3, OPTION4);
	DBMS_OUTPUT.PUT_LINE('OPTION : ' || '1. ' || OPTION1 || CHR(9) || '2. ' || OPTION2 || CHR(9) || '3. ' || OPTION3 || CHR(9) || '4. ' || OPTION4);
	ANS := QUIZ_COMPETITION_SYSTEM.ANSWER_SEARCH(QUESTION_ID);
		
	IF	  (ANS = 1) THEN	DBMS_OUTPUT.PUT_LINE('ANSWER : 1. ' || OPTION1);
	ELSIF (ANS = 2) THEN	DBMS_OUTPUT.PUT_LINE('ANSWER : 2. ' || OPTION2);
	ELSIF (ANS = 3) THEN	DBMS_OUTPUT.PUT_LINE('ANSWER : 3. ' || OPTION3);
	ELSIF (ANS = 4) THEN	DBMS_OUTPUT.PUT_LINE('ANSWER : 4. ' || OPTION4);	END IF;	
	
	INSERT INTO Asking1 VALUES(QUESTION_ID, 10001, ROUND_ID);	
	INSERT INTO Asking2@site_link VALUES(QUESTION_ID, MARKS, QUESTION);	
	DELETE FROM Question_Gallery2@site_link WHERE QID = QUESTION_ID;
	
END;
/

COMMIT;